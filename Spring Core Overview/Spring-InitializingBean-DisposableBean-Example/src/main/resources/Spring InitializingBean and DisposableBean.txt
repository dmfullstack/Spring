In Spring, InitializingBean and DisposableBean are two marker interfaces, 
a useful way for Spring to perform certain actions upon bean initialization and 
destruction.

For bean implemented InitializingBean, 
it will run afterPropertiesSet() after all bean properties have been set.
    
For bean implemented DisposableBean, 
it will run destroy() after Spring container is released the bean.

Thoughts…
I would not recommend to use InitializingBean and DisposableBean interface, 
because it will tight coupled your code to Spring. 
A better approach should be specifying the init-method and destroy-method 
attributes in your bean configuration file.

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">
 
	<bean id="customerService" class="com.mkyong.customer.services.CustomerService" 
		init-method="initIt" destroy-method="cleanUp">
 
		<property name="message" value="i'm property message" />
	</bean>
 
</beans>