Handler Adapters
=================

It is important to understand that the Spring Framework is so flexible 
enough to define what Components should be delegated the Request once the 
Dispatcher Servlet finds the appropriate Handler Mapping. 
This is achieved in the form of Handler Adapters. 
If you remember in the Spring Work flow section, 
that it is mentioned once the Dispatcher Servlet 
chooses the appropriate Handler Mapping, 
the Request is then forwarded to the Controller object that is defined 
in the Configuration File. 

This is the default case. 
And this so happens because the Default Handler Adapter is 
Simple Controller Handler Adapter 
(represented by org.springframework.web.servlet.SimpleControllerHandlerAdapter), which will do the job of the Forwarding the Request from the Dispatcher to the Controller object.

Other types of Handler Adapters are Throwaway Controller HandlerAdapter (org.springframework.web.servlet.ThrowawayControllerHandlerAdapter) and SimpleServlet HandlerAdapter (org.springframework.web.servlet.SimpleServletHandlerAdapter). The Throwaway Controller HandlerAdapter, for example, carries the Request from the Dispatcher Servlet to the Throwaway Controller (discussed later in the section on Controllers) and Simple Servlet Handler Adapter will carry forward the Request from the Dispatcher Servlet to a Servlet thereby making the Servlet.service() method to be invoked.

If, for example, you don’t want the default Simple Controller Handler Adapter, then you have to redefine the Configuration file with the similar kind of information as shown below,
	<bean id="throwawayHandler" class = "org.springframework.web.servlet.mvc.throwaway.
	    ThrowawayControllerHandlerAdapter"/>
	 
	or
	 
	<bean id="throwawayHandler" class="org.springframework.web.servlet.mvc.throwaway.
	    SimpleServletHandlerAdapter"/>
	                

Even, it is possible to write a Custom Handler Adapter by implementing the HandlerAdapter interface available in the org.springframework.web.servlet package.
- See more at: http://www.javabeat.net/00/0/introduction-to-spring-mvc-web-framework-web-tier/#sthash.KQZsnbDs.dpuf